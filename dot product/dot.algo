
FUNCTION dot_product(v1,v2 : ARRAY_OF INTEGER) : INTEGER
VAR
    i, dot : INTEGER;
BEGIN
    dot :=0;
    i:=0;
    IF (v1.length <> v2.length) THEN
        Write("vectors with different sizes we cannot calculat dot product");
        RETURN NaN; // NaN : not definte number
    END_IF
    WHILE (i <v1.length ) DO
        dot := dot + v1[i]*v2[i];
    END_WHILE
    RETURN dot ;
END



PROCEDURE dot_product(v1,v2 : ARRAY_OF INTEGER, VAR dot : INTEGER)
VAR
    i : INTEGER;
BEGIN
    dot :=0;
    i:=0;
    IF (v1.length <> v2.length) THEN
        Write("vectors with different sizes we cannot calculat dot product");
        dot := NaN; // NaN : not definte number
    END_IF
    WHILE (i <v1.length ) DO
        dot := dot + v1[i]*v2[i];
    END_WHILE
END


ALGORITHM  dot_product
VAR
    v1,v2 :array_name : ARRAY_OF INTEGER[];
    i,ps : number
BEGIN
    Write "give me v1"
    Write "give me v2"
    dot_product(v1,v2,ps)
    IF (ps=0) THEN
        write "v1 et v2 sont orthogo"
        else write ("v1 et v2 ne sont pas orthogo")
    END_IF
END

ALGORITHM  dot_product
VAR
    v1,v2 :array_name : ARRAY_OF INTEGER[];
    i,ps : number
BEGIN
    Write "give me v1"
    Write "give me v2"
    ps= dot_product
    si ps=0
    write ("v1 et v2 sont orthogo")
    else write ("v1 et v2 ne sont pas orthogo")
END